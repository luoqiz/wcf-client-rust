# 可选，将显示在 GitHub 存储库的“操作”选项卡中的工作流名称
name: Release CI

# 指定此工作流的触发器
on:
  push:
    # 匹配特定标签 (refs/tags)
    tags:
      - "v*" # 推送事件匹配 v*, 例如 v1.0，v20.15.10 等来触发工作流

# 需要运行的作业组合
jobs:
  # 任务：创建 release 版本
  # create-release:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

  #   steps:
  #     - uses: actions/checkout@v4
  #     # 查询版本号（tag）
  #     - name: Query version number
  #       id: get_version
  #       shell: bash
  #       run: |
  #         echo "using version tag ${GITHUB_REF:10}"
  #         echo ::set-output name=version::"${GITHUB_REF:10}"

  # 根据查询到的版本号创建 release
  # - name: Create Release
  #   id: create_release
  #   uses: actions/create-release@v1
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   with:
  #     tag_name: "${{ steps.get_version.outputs.VERSION }}"
  #     release_name: "app ${{ steps.get_version.outputs.VERSION }}"
  #     body: "See the assets to download this version and install."

  # 编译 Tauri
  build-tauri:
    # needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: 'macos-latest' # for Arm based macs (M1 and above).
          #   args: '--target aarch64-apple-darwin'
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          # - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
          #   args: ''
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      # 安装 Node.js
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # 安装 Rust
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds. 
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # 使用 Rust 缓存，加快安装速度
      - uses: Swatinem/rust-cache@v1

      # 安装依赖执行构建，以及推送 github release
      - name: Install app dependencies and build it
        # 这里的pubhome要修改为你package.json里面配置的编译命令
        run: npm install -g pnpm && pnpm i

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "自动发布 v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
          # releaseId: ${{ needs.create-release.outputs.RELEASE_UPLOAD_ID }}
